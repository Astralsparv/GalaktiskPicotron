picotron cartridge // www.picotron.net
version 2

:: files.lua
--[[pod_format="raw",created="2025-09-01 22:19:35",modified="2025-09-01 22:57:02",revision=44]]
function saveApps(dir,file,data)
	mkdir(dir)
	local txt=""
	for i=1, #data do
		txt=txt..data[i].."\n"
	end
	store(dir..file,txt)
end

function loadApps(dir,file,def)
	mkdir(dir)
	local f=fetch(dir..file)
	if (f) then
		return split(f,"\n")
	else
		--load and save default data (def)
		saveApps(dir,file,def)
		return def
	end
end

function savePod(dir,file,data)
	mkdir(dir)
	store(dir..file,data)
end

function loadPod(dir,file,def)
	mkdir(dir)
	local f=fetch(dir..file)
	if (f) then
		return f
	else
		--load and save default data (def)
		savePod(dir,file,def)
		return def
	end
end
:: label.qoi
b64$cW9pZgAAAeAAAAEOBAH-AAAA-P39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39-f39
-f390gAAAAAAAAAB
:: main.lua
--[[pod_format="raw",created="2025-09-01 18:25:04",modified="2025-09-02 04:31:33",revision=774]]
--Save info:
saveDir="/appdata/Taskbar/"

--get file sprites
fileGFX = fetch "/system/apps/filenav.p64/gfx/0.gfx"

for i=0, 255 do
	set_spr(i,fileGFX[i].bmp)
end

--rip file sprites

function pathToName(path)
	local n=split(path,"/")
	if (#n[#n]==0) return n[#n-1] -- folders e.g: /appdata/ would have last index be blank as of the ending /
	return n[#n]
end

--include filenavs icon system
include "/system/apps/filenav.p64/icon.lua"
include "files.lua"
include "start.lua"
include "widgets.lua"

generate_icon_palettes()

--for fitting flush start menu & taskbar
offsetY=0

poke(0x547d, 0x3f) -- transparency
poke(0x4000, get(fetch"/system/fonts/lil_mono.font")) -- mono font

--Apps in path form
apps={}

styling=loadPod(saveDir,"styling.pod",{
width="fill",
appAlign="left",
cols={12,1,7,5,13,6},
taskbarBackground=true,
startIcon=--[[pod_type="gfx"]]unpod("b64:bHo0AG8AAACBAAAA9ThweHUAQyAQEARAXxBwHlEeQA6RDiAOIR8OER0hDhAOEQ0PFw8eHQwPFw0RDgAOEQ0rHCsNER4RDQwbHRsMDREeIQ0MPQwNIQgABhoAAywAATYAwAsMHQwLDREOEA4hHVkAsCAOkQ5AHlEecF5A"),
startText=--[[pod_type="gfx"]]unpod("b64:bHo0AP8AAAA9AQAA8CpweHUAQyBCEgRQXxCgd-AXHlEecJfwFQ6RDmAX8BwOIR8OER0hDlAX8BsOIQ0PHg8XHQwPHg0hDkASAPEIEQ0cCxwLHA0RDkAXoBfwCBcgDhENCxwCAEYNEQ4wFQBxDBsMHQwbDBUA9wyAVzBHMEcQVwAOIQ0cPRwNIQ4whxBXIGcQZwAUANtAhyAXQBcgFxAXIBcgRACbsBcgF2BHEBdwcQAAGAAgUFcYABcwnACCwBcgF0AnEBcYAJIhDQsMHQwLDSEYAAFiAGBwF0AOIR3pABHQFAAgECcUABBQBQHwDpcgRxBnEBdwRzAeUR6Ad0A3ICcAFxAXgDdQXvAm"),
network=--[[pod_type="gfx"]]unpod("b64:bHo0ACkAAAAoAAAA8AtweHUAQyALCwTwCGcgB2AHAAcQRxAHEAdABw4AoDBHQAdAB2AH8AA="),
noNetwork=--[[pod_type="gfx"]]unpod("b64:bHo0AEIAAABHAAAA4XB4dQBDIAsLBCBHQAcAAgATIAQA8QcABxBHEEcgRxAHIAcQRyAlFxAnFRAFGADwAgUABQAFEAcABwAFEBUgNyUA"),
batterySaver=--[[pod_type="gfx"]]unpod("b64:bHo0ACoAAAAqAAAA8QxweHUAQyALCAQwF2AXEAdABzAHABcQByAHIBcIAKAnACcwF4AXAIcA"),
sound=--[[pod_type="gfx"]]unpod("b64:bHo0ACwAAAA2AAAA8QVweHUAQyAKBwQQFyAHIAcABwAHEAQARxAHEBcGAAEaAJAABxAHIBcgBxA="),
noSound=--[[pod_type="gfx"]]unpod("b64:bHo0ACgAAAAsAAAA8QlweHUAQyAKBwQQF2AHAAdQBxAHAAcABxACABMgDgBwIAcAB3AXUA==")
})
store(saveDir.."readme.txt",fetch("readme.txt"))
--hovered title
text=""
--preferred x (start of app, aligns to fit the screen)
prefx=0

local y=12
gui=create_gui{}
--has 1 default app - start menu (built in, fake app)
appElements={}
if (styling.appAlign!="right") then
	add(appElements,gui:attach{
		x=0,y=y,
		dy=2,
		width=20,height=18,
		icon=styling.startIcon,
		title="Start",
		draw=function(self)
			spr(self.icon,2,self.dy)
			--reset hover
			self.dy=2
		end,
		hover=function(self)
			self.dy=0
			text=self.title
			prefx=self.x+10
		end,
		tap=function(self)
			startMenu(not startOpen)
		end
	})
end
--Get data
apps=loadApps(saveDir,"apps.txt",{"/appdata/Taskbar/readme.txt","/appdata/Taskbar/"})

--allows the window to be minimum size

local longestwidth=0

for i=1, #apps do
	--app exists
	if (fetch(apps[i])) then
		--meta of file
		local meta = fetch_metadata(apps[i])
		if (#(meta.title or apps[i])*5.5>longestwidth) longestwidth=#(meta.title or apps[i])*5.5
		--add app to list
		add(appElements,gui:attach{
			x=0,y=y,
			dy=2,
			width=20,height=18,
			icon=get_file_icon(pathToName(apps[i]), meta),
			title=meta.title or pathToName(apps[i]),
			path=apps[i],
			draw=function(self)
				spr(self.icon,2,self.dy)
				--reset hover
				self.dy=2
			end,
			hover=function(self)
				self.dy=0
				text=self.title
				prefx=self.x+10
			end,
			tap=function(self)
				if (sub(self.path,-4)==".lua" or sub(self.path,-4)==".p64" or sub(self.path,-8)==".p64.png" or sub(self.path,-8)==".p64.rom") then
					create_process(self.path,{})
				else
					create_process(env().open_with and env().open_with or "/system/util/open.lua",
						{
							argv = {fullpath(self.path)},
							fileview = {{location=fullpath(filename),mode="RW"}}
						}
					)
				end
			end
		})
	else
		if (#apps[i]>0) then -- allow folders
			add(appElements,gui:attach{
				x=0,y=y,
				dy=2,
				width=20,height=18,
				icon=get_spr(2),
				title=pathToName(apps[i]),
				path=apps[i],
				draw=function(self)
					--transparent corners
					
					spr(self.icon,2,self.dy)
					--reset hover
					self.dy=2
				end,
				hover=function(self)
					self.dy=0
					text=self.title
					prefx=self.x+10
				end,
				tap=function(self)
					create_process(env().open_with and env().open_with or "/system/util/open.lua",
						{
							argv = {fullpath(self.path)},
							fileview = {{location=fullpath(filename),mode="RW"}}
						}
					)
				end
			})
		end
	end
end

if (styling.appAlign=="right") then
	add(appElements,gui:attach{
		x=0,y=y,
		dy=2,
		width=20,height=18,
		icon=styling.startIcon,
		title="Start",
		draw=function(self)
			spr(self.icon,2,self.dy)
			--reset hover
			self.dy=2
		end,
		hover=function(self)
			self.dy=0
			text=self.title
			prefx=self.x+10
		end,
		tap=function(self)
			startMenu(not startOpen)
		end
	})
end
--styling stuffs

--width
totalAppWidth=#appElements*20
widgetWidth=0
if (widgets.clock) widgetWidth+=clockWidget.width+1
if (widgets.network) widgetWidth+=networkWidget.width+4
if (widgets.sound) widgetWidth+=soundWidget.width+2
if (widgets.batterySaver) widgetWidth+=batterySaverWidget.width+2

if (styling.width=="minimum") then
	width=max(longestwidth,totalAppWidth)+widgetWidth
elseif (styling.width=="fill") then
	width=480
end

--app alignments & widget alignments

if (styling.appAlign=="center") then
	appStart=(width-totalAppWidth)/2-widgetWidth/2
elseif (styling.appAlign=="left") then
	appStart=0
elseif (styling.appAlign=="right") then
	appStart=width-totalAppWidth-widgetWidth/2
end

for i=1, #appElements do
	appElements[i].x=(i-1)*20+appStart
end

--update positions
updateWidgetPositions(styling.appAlign)
updateStartPosition(styling.appAlign)

startMenu(false,false)

appOpened=0
function _update()
	text=""
	gui:update_all()
	if (startOpen) start:update_all()
	if (key("shift")) then
		for i=1, min(9,#appElements) do
			if (key(tostr(i))) then
				if (appOpened!=i) then
					appOpened=i --stop spam
					appElements[i].tap(appElements[i])
				end
			elseif (appOpened==i) then
				appOpened=0
			end
		end
	else
		appOpened=0
	end
	widgetsGUI:update_all()
end

function _draw()
	cls()
	--background
	if (styling.taskbarBackground) then
		if (styling.width=="fill") then
			rectfill(0,offsetY+y+1,479,offsetY+y+18,styling.cols[1])
		elseif (styling.width=="minimum") then
			rectfill(appStart-widgetWidth/2,offsetY+y+1,width-appStart+widgetWidth/2,offsetY+y+18,styling.cols[1])
			--transparent borders
			pset(appStart,offsetY+y+1,0)
			pset(appStart,offsetY+y+18,0)
			pset(width-1,offsetY+y+1,0)
			pset(width-1,offsetY+y+18,0)
		end
	end
	gui:draw_all()
	widgetsGUI:draw_all()
	if (startOpen) start:draw_all()
	if (text!="") then
		if (styling.appAlign=="center") then
			local x=width/2-#text*2.5
			rectfill(x,offsetY,x+#text*5,offsetY+9,styling.cols[2])
			if (not (startOpen)) then
				--transparent borders
				pset(x,offsetY,0)
				pset(x,offsetY+9,0)
				pset(x+#text*5,offsetY,0)
				pset(x+#text*5,offsetY+9,0)
			end
			--title
			print(text,x+1,offsetY+1,styling.cols[3])
		else
			local x=min(width,max(0,prefx-#text*2.5-1))
	--		printh(x+#text*2.5+1)
	--		printh(width)
	--		printh("")
			if (x+#text*5+1>width) then
				x=width-#text*5
			end
			rectfill(x,offsetY,x+#text*5,offsetY+9,styling.cols[2])
			--transparent borders
			if (not (startOpen)) then
				--transparent borders
				pset(x,offsetY,0)
				pset(x,offsetY+9,0)
				pset(x+#text*5,offsetY,0)
				pset(x+#text*5,offsetY+9,0)
			end
			--title
			print(text,x+1,offsetY+1,styling.cols[3])
		end
	end
end
:: readme.txt
--[[pod_format="raw",created="2025-09-01 22:36:54",modified="2025-09-02 01:44:57",revision=16]]
# Astral Taskbar
Save Path: /appdata/Taskbar

## Includes
### Start Menu
	Customisable list of system apps
	Customisable GFX for Start icon and Start text
### Task bar
	Customisable list of often use apps

## How to use
### Setting up
	Set to auto-run on Picotron start (suggested to use procManager)
	Add your taskbar apps in apps.txt
	Add your start menu apps in startapps.txt
	Customise styling in styling.pod
	Customise default text in messages.pod (e.g: no description on an app)

### Styling options

	cols:
		1: Taskbar background color
		2: Start Menu background color / Title color
		3: Text color
		4: Unfocused text color (Start menu)
		5: App Info (Start Menu)
	
	appAlign: left | center | right
	fill: minimum | fill
	taskbarBackground: disables taskbar background color - only shows apps

### Keybinds
	As of now - only works if you click the taskbar first (I'm not sure how to get keybinds without the app being focused)
	Shift+(num) - Open respective app (similar to Windows+num)


:: start.lua
--[[pod_format="raw",created="2025-09-01 20:30:02",modified="2025-09-02 05:09:04",revision=526]]
startOpen=false
local startWidth=200
local startHeight=150
local startOffsetY=102
local startScroll=0
startX=0

local textHeight=13
start=create_gui{}

local startElements={}
messages=loadPod(saveDir,"messages.pod",{noAuthor="No Author",noDescription=""})
startApps=loadApps(saveDir,"startapps.txt",{"/system/apps/terminal.lua","/system/apps/notebook.p64","/system/apps/filenav.p64","/system/apps/settings.p64","/appdata/Taskbar/"})

closeHitbox=start:attach{
	x=0,y=0,
	width=480,height=270,
	click=function()
		startMenu(false)
	end,
	draw=function()
		rectfill(0,0,width,height,styling.cols[2])
	end
}

local startBg=start:attach{
	x=startX,y=startHeight-48,
	width=startWidth,height=startHeight,
	update=function(self)
		local mx, my, mb, wheel_x, wheel_y=mouse()
		--in start menu
		if (mx>self.x and mx<self.x+self.width and my>self.y and my<self.y+self.height) then
			startScroll+=wheel_y*4
			startScroll=mid(0,startScroll,#startElements*-11+77)
		end
	end,
	draw=function(self)
		rectfill(0,0,self.width-1,self.height-1,styling.cols[2])
		spr(styling.startText,2,2)
	end
}

local y=25+startOffsetY
local longestwidth=0

for i=1, #startApps do
	--app exists
	if (fetch(startApps[i])) then
		--meta of file
		local meta = fetch_metadata(startApps[i])
		if (#(meta.title or startApps[i])*5.5>longestwidth) longestwidth=#(meta.title or startApps[i])*5.5
		--add app to list
		add(startElements,start:attach{
			x=startX,y=y,
			initY=y,
			width=startWidth,height=10,
			icon=get_file_icon(pathToName(startApps[i]), meta),
			title=meta.title or pathToName(startApps[i]),
			desc=meta.notes or messages.noDescription,
			author=meta.author or messages.noAuthor,
			path=startApps[i],
			hovered=false,
			update=function(self)
				self.y = self.initY + startScroll
				if (self.y<125 or self.y>=240) then
					self.y=-50 -- out of bounds
				end
			end,
			draw=function(self)
				local c=styling.cols[4]
				if (self.hovered) c=styling.cols[3]
				print(self.title,12,0,c)
				sspr(self.icon,0,0,16,16,0,0,8,8)
				--reset hover
				self.hovered=false
			end,
			hover=function(self)
				self.hovered=true
				appInfo.icon=self.icon
				appInfo.title=self.title
				if (self.desc==nil) self.desc=messages.noDescription
				appInfo.desc=self.desc
				appInfo.path=self.path
				appInfo.author=self.author
			end,
			tap=function(self)
				startMenu(false)
				if (sub(self.path,-4)==".lua" or sub(self.path,-4)==".p64" or sub(self.path,-7)==".p64.png" or sub(self.path,-7)==".p64.rom") then
					create_process(self.path,{})
				else
					create_process(env().open_with and env().open_with or "/system/util/open.lua",
						{
							argv = {fullpath(self.path)},
							fileview = {{location=fullpath(filename),mode="RW"}}
						}
					)
				end
			end
		})
		y+=11
	else
		if (#startApps[i]>0) then --allow folders
			add(startElements,start:attach{
				x=startX,y=y,
				initY=y,
				width=startWidth,height=10,
				icon=2,
				title=pathToName(startApps[i]),
				desc=messages.noDescription,
				author=messages.noAuthor,
				path=startApps[i],
				hovered=false,
				update=function(self)
					self.y = self.initY + startScroll
					if (self.y<125 or self.y>=240) then
						self.y=-50 -- out of bounds
					end
				end,
				draw=function(self)
					local c=styling.cols[4]
					if (self.hovered) c=styling.cols[3]
					print(self.title,12,0,c)
					sspr(self.icon,0,0,16,16,0,0,8,8)
					--reset hover
					self.hovered=false
				end,
				hover=function(self)
					self.hovered=true
					appInfo.icon=self.icon
					appInfo.title=self.title
					appInfo.desc=self.desc
					appInfo.path=self.path
					appInfo.author=self.author
				end,
				tap=function(self)
					startMenu(false)
					if (sub(self.path,-4)==".lua" or sub(self.path,-4)==".p64" or sub(self.path,-7)==".p64.png" or sub(self.path,-7)==".p64.rom") then
						create_process(self.path,{})
					else
						create_process(env().open_with and env().open_with or "/system/util/open.lua",
							{
								argv = {fullpath(self.path)},
								fileview = {{location=fullpath(filename),mode="RW"}}
							}
						)
					end
				end
			})
			y+=11
		end
	end
end

appInfo=start:attach{
	x=startX,y=startHeight-50+startOffsetY,
	width=startWidth,height=50,
	icon=get_spr(8),
	title="",
	desc="",
	path="",
	author="",
	hovered=false,
	draw=function(self)
		rectfill(0,0,self.width,self.height,styling.cols[5])
		print(self.title,36,4,styling.cols[3])
		if (self.desc=="") self.desc=messages.noDescription
		print("\014"..self.desc,36,14,styling.cols[6])
		if (self.author != "") then
			print("Author: "..self.author,4,36,styling.cols[3])
		end
		sspr(self.icon,0,0,16,16,2,2,32,32)
		--reset hover
		self.hovered=false
		self.icon=--[[pod_type="gfx"]]unpod("b64:bHo0AAwAAAALAAAAsHB4dQBDIBAQBPDw")
		self.title=""
		self.path=""
		self.desc=""
		self.author=""
	end,
	hover=function(self)
		self.hovered=true
	end
}

function startMenu(on,resize)
	if (resize==nil) resize=true
	startOpen=on
	if (on) then
		window{
			x=240-width/2,
			y=0,
			width=width,
			height=270,
			has_frame=false,
			resizable=true,
			moveable=false,
			title="Astral Dock"
		}
		if (resize) then
			for i=1, #appElements do
				appElements[i].y+=252-textHeight
			end
		end
		offsetY=252-textHeight
	else
		window{
			x=240-width/2,
			y=239,
			width=width,
			height=31,
			has_frame=false,
			resizable=true,
			moveable=false,
			title="Astral Dock"
		}
		if (resize) then
			for i=1, #appElements do
				appElements[i].y-=252-textHeight
			end
		end
		offsetY=0
	end
end

function updateStartPosition(n)
	if (n=="right") then
		startX=480-startWidth
		for i=1, #startElements do
			startElements[i].x=startX
		end
		startBg.x=startX
		appInfo.x=startX
	elseif (n=="center") then
		startX=width/2-startWidth/2
		for i=1, #startElements do
			startElements[i].x=startX
		end
		startBg.x=startX
		appInfo.x=startX
	end
end
:: widgets.lua
--[[pod_format="raw",created="2025-09-02 02:04:39",modified="2025-09-02 05:00:01",revision=260]]
widgets=loadPod(saveDir,"widgets.pod",{clock=true,network=true,batterySaver=true,sound=true})
local systemSettings=fetch("/appdata/system/settings.pod")
local lastUpdate=time()

widgetsGUI=create_gui{}

data=widgetsGUI:attach{
	x=0,y=0,
	width=0,height=0,
	update=function(self)
		if (time()-lastUpdate>5) then
			systemSettings=fetch("/appdata/system/settings.pod")
			lastUpdate=time()
		end
	end
}
if (widgets.clock) then
	clockWidget=widgetsGUI:attach{
		x=0,y=14,
		width=49,height=18,
		update=function(self)
			self.y=14+offsetY
		end,
		draw=function(self)
			local format = true and "%d/%m/%Y %H:%M:%S"
			if (styling.appAlign=="right") then
				print(date(format):sub(12),0,0,styling.cols[3])
				print(date(format):sub(1,10),0,9,styling.cols[3])
			else
				print(date(format):sub(12),10,0,styling.cols[3])
				print(date(format):sub(1,10),0,9,styling.cols[3])
			end
		end
	}
end
if (widgets.network) then
	networkWidget=widgetsGUI:attach{
		x=0,y=17,
		width=11,height=11,
		update=function(self)
			self.y=17+offsetY
		end,
		draw=function(self)
			if (systemSettings.network_access) then
				spr(styling.network,0,0)
			else
				spr(styling.noNetwork,0,0)
			end
		end
	}
end
if (widgets.batterySaver) then
	batterySaverWidget=widgetsGUI:attach{
		x=0,y=18,
		width=11,height=8,
		update=function(self)
			self.y=18+offsetY
		end,
		draw=function(self)
			if (systemSettings.battery_saver) then
				spr(styling.batterySaver,0,0)
			end
		end
	}
end
if (widgets.sound) then
	soundWidget=widgetsGUI:attach{
		x=0,y=19,
		width=10,height=7,
		update=function(self)
			self.y=19+offsetY
		end,
		draw=function(self)
			if (systemSettings.mute_audio) then
				spr(styling.noSound,0,0)
			else
				spr(styling.sound,0,0)
			end
		end
	}
end

function updateWidgetPositions(a)
	--widget align = opposite of app align
	if (a=="left" or a=="center") then
		--widget right
		local x=width
		if (widgets.clock) then
			x-=clockWidget.width+1
			clockWidget.x=x
		end
		if (widgets.network) then
			x-=networkWidget.width+4
			networkWidget.x=x
		end
		if (widgets.sound) then
			x-=soundWidget.width+2
			soundWidget.x=x
		end
		if (widgets.batterySaver) then
			x-=batterySaverWidget.width+2
			batterySaverWidget.x=x
		end
	elseif (a=="right") then
		--widget right
		local x=1
		if (widgets.clock) then
			clockWidget.x=x
			x+=clockWidget.width+4
		end
		if (widgets.network) then
			networkWidget.x=x
			x+=networkWidget.width+2
		end
		if (widgets.sound) then
			soundWidget.x=x
			x+=soundWidget.width+2
		end
		if (systemSettings.battery_saver and widgets.batterySaver) then
			batterySaverWidget.x=x
			x+=batterySaverWidget.width
		end
	end
end
:: .info.pod
b64$LS1bW3BvZCxhdXRob3I9IkFzdHJhbHNwYXJ2IixiYnNfaWQ9InRhc2tiYXItMiIsY3JlYXRl
ZD0iMjAyNS0wNy0xOSAxMzozMjozNSIsaWNvbj11c2VyZGF0YSgidTgiLDE2LDE2LCIwMDAwMDAw
MDAwMTAxMDEwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDEwMTAwMTAxMDEwMTAxMDExMDEwMDAwMDAw
MDAwMDEwMDEwMTAxMDEwMTAxMDEwMTAxMDExMDAwMDAwMDEwMDEwMTAxMGUwZTAxMDEwZTBlMDEw
MTAxMTAwMDAwMTAwMTAxMGUxNzFlMGUwZTFlMTcwZTAxMDExMDAwMTAwMTAxMGUxNzE3MTcxZTFl
MTcxNzE3MGUwMTAxMTAxMDAxMDEwZTFlMTcxNzBlMGUxNzE3MWUwZTAxMDExMDEwMDEwMTAxMGUx
ZTBlMGUwZTBlMWUwZTAxMDEwMTEwMTAwMTAxMDEwZTFlMGUwZTBlMGUxZTBlMDEwMTAxMTAxMDAx
MDEwZTFlMTcxNzBlMGUxNzE3MWUwZTAxMDExMDEwMDEwMTBlMTcxNzE3MWUxZTE3MTcxNzBlMDEw
MTEwMDAxMDAxMDEwZTE3MWUwZTBlMWUxNzBlMDEwMTEwMDAwMDEwMDEwMTAxMGUwZTAxMDEwZTBl
MDEwMTAxMTAwMDAwMDAxMDAxMDEwMTAxMDEwMTAxMDEwMTAxMTAwMDAwMDAwMDAwMTAxMDAxMDEw
MTAxMDEwMTEwMTAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMTAxMDEwMDAwMDAwMDAwMCIpLG1vZGlm
aWVkPSIyMDI1LTA5LTMwIDE5OjM4OjE0Iixub3Rlcz0iRnVsbHkgY3VzdG9taXNhYmxlIHRhc2ti
YXIgJiBTdGFydCBtZW51IixydW50aW1lPTIwLHNhbmRib3g9ZmFsc2UsdGl0bGU9IlRhc2tiYXIi
LHZlcnNpb249InYxLjAiLHdvcmtzcGFjZXM9e3tsb2NhdGlvbj0ibWFpbi5sdWEjMjUwIix3b3Jr
c3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJ3aWRnZXRzLmx1YSMxMDAiLHdvcmtzcGFjZV9pbmRl
eD0xfSx7bG9jYXRpb249InN0YXJ0Lmx1YSMxNjgiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRp
b249ImZpbGVzLmx1YSMxMCIsd29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlvbj0iZ2Z4LzEubHVh
Iix3b3Jrc3BhY2VfaW5kZXg9MX19XV0=
:: [eoc]
